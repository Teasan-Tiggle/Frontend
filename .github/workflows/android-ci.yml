name: Android CI

on:
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      #  google-services.json 파일 생성
      - name: Create google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" > app/google-services.json

      # 2. JDK 17 버전 설정 (핵심 수정 사항)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle 캐시 설정 (빌드 속도 향상)
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 5. 안드로이드 린트 실행
      - name: Run Android lint
        run: ./gradlew lintDebug

      # 6. 디버그 빌드 실행
      - name: Build with Gradle
        run: ./gradlew assembleDebug

      # 7. 린트 결과물 업로드 (빌드 성공 여부와 관계없이 항상 실행)
      - name: Upload lint results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-results
          path: app/build/reports/lint-results-debug.html

      # 8. APK 파일 업로드 (빌드 성공 시에만 실행)
      - name: Upload APK
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk